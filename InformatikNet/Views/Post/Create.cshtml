@model InformatikNet.Models.CreatePostModel

@{
    ViewBag.Title = "Nytt inlägg";
    var cat = ViewBag.Category;

}
<head>
    <script>
        function show() {
            document.getElementById('newTag').style.visibility = 'visible';
            document.getElementById('newTagButton').style.visibility = 'visible';
            document.getElementById('addTagButton').style.visibility = 'hidden';
        };

        function showAddTag() {
            document.getElementById('newTag').style.visibility = 'hidden';
            document.getElementById('newTagButton').style.visibility = 'hidden';
            document.getElementById('addTagButton').style.visibility = 'visible';

            var tagValue = document.getElementById('newTag').value;
            var category = '@cat';
            var newTag = { Name: tagValue, CategoryString: category };

            $.ajax({
                type: 'POST',
                url: '@Url.Action("CreateTag", "WebApi", new { httproute = "" })',
                data: JSON.stringify(newTag),
                contentType: 'application/json',
                datatype: 'json',
                success: function () {
                    location.reload();
                },
            });
        }
    </script>
</head>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Content, 10, 40, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Tag, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.TagId, Model.Tag, new { htmlAttributes = new { @class = "form-control", aria_describedby = "dropdownMenu1" } })
                @Html.ValidationMessageFor(model => model.Tag, "", new { @class = "text-danger" })
                <button id="addTagButton" type="button" onclick="show()" class= "btn btn-primary btn-xs">+</button>
                <input id="newTag" type="text" style="visibility:hidden;"/>
                <button class="btn btn-default" id="newTagButton" type="button" style="visibility:hidden;" onclick="showAddTag()">Lägg till</button>
                
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Skapa" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
   @Html.ActionLink("Tillbaka", "Posts", "Post", routeValues: new { SelectedCategory = cat }, htmlAttributes: new { @class = "btn btn-primary btn-large" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
